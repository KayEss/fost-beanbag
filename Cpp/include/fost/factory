/*
    Copyright 2009, Felspar Co Ltd. http://fost.3.felspar.com/
    Distributed under the Boost Software License, Version 1.0.
    See accompanying file LICENSE_1_0.txt or copy at
        http://www.boost.org/LICENSE_1_0.txt
*/


#ifndef FOST_FACTORY
#define FOST_FACTORY
#pragma once


#include <fost/db>
#include <fost/detail/schema/factory.hpp>


// Used to declare attributes in the models
#define FSL_ATTRIBUTE_TAG_TYPE( name, type, stereotype ) \
    struct _##name##_tag { \
        typedef instance_type model_type; \
        typedef type logical_attribute_type; \
        typedef stereotype stereotype_tag; \
    };
/// Define an attribute which is a primary key for the model
#define FSL_ATTRIBUTE_PK( name, type ) \
    FSL_ATTRIBUTE_TAG_TYPE( name, type, fostlib::model_base::primary_tag ) \
    _attribute< _##name##_tag > name;
/// Define an attribute which is a required model field
#define FSL_ATTRIBUTE_NOT_NULL( name, type ) \
    FSL_ATTRIBUTE_TAG_TYPE( name,  type, fostlib::model_base::required_tag ) \
    _attribute< _##name##_tag > name;
/// Define an attribute whihc is a nullable model field
#define FSL_ATTRIBUTE_NULL( name, type ) \
    FSL_ATTRIBUTE_TAG_TYPE( name, type, fostlib::model_base::nullable_tag ) \
    _attribute< _##name##_tag > name;


#endif // FOST_FACTORY
